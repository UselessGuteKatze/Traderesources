@using Yoda.Application.Helpers
@using Yoda.Interfaces
@using Yoda.Application.Models
@using Microsoft.AspNetCore.Hosting;
@using UsersResources;
@using Yoda.Localization;
@using Microsoft.Extensions.Hosting;
@using Humanizer;
@using Yoda.Controllers;
@using YodaApp.Yoda.Application.Notifications;
@using Microsoft.Extensions.DependencyInjection;
@inject INotificationsApiClientFactory notificationsApiClientFactory;
@model Yoda.Application.Models.YodaRenderData
@inject YodaApp.Yoda.Application.Avatars.IAvatarApiClientFactory avatarClient;

@{
    var rootDir = Url.Content("~/") + Model.CurrentLanguage + "/";
    var filesRootDir = Url.Content("~/");
    var dbMode = Model.RequestContext.AppEnv.HostEnvironment;
    var showProductionEnvWarning = Model.ShowProductionEnvironmentWarning;
    string T(LocalizableText text)
    {
        var langTranslator = Model.RequestContext.LangTranslator;
        return langTranslator.Translate(text, Model.CurrentLanguage, "view");
    }
    var notificationsApiClient = notificationsApiClientFactory.CreateClient().Result;
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <title>@Model.Title</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="~/Theme/ui-packages/project-theme/logo/tab-icon.svg" />
    <script src="/UiCorePackages/ui-packages/jquery/core/jquery-3.5.1.min.js" type="text/javascript"></script>

    @foreach (var cssFile in Model.StyleSheetFiles)
    {
        using (new ConditionalCommentWrapper(Html, cssFile.ConditionalComment))
        {
            <link type="text/css" rel="stylesheet" href="@cssFile.File?v=@cssFile.Hash" />
        }
    }

    <script type="text/javascript">
        var rootDir = "@rootDir";
    </script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-35266297-7"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'UA-35266297-7');
    </script>
</head>

<body class="project-@Model.Project.ToLower() @Model.Module.ToLower()_@Model.Method.ToLower() loading" data-layout-config='{"leftSideBarTheme":"dark","layoutBoxed":false, "leftSidebarCondensed":false, "leftSidebarScrollable":false,"darkMode":false, "showRightSidebarOnStart": true}' data-leftbar-theme='dark'>

    @if (dbMode.IsDevelopment())
    {
        <div class="connection-type-label bg-success py-1 px-2 text-white">Тестовая база</div>
    }
    else if (dbMode.IsStaging())
    {
        <div class="connection-type-label bg-success py-1 px-2 text-white">ДЕМО-база</div>
    }
    else if (dbMode.IsProduction())
    {
        if (showProductionEnvWarning)
        {
            <div class="connection-type-label bg-danger py-1 px-2 text-white">Рабочая база</div>
        }
    }
    else
    {
        <div class="connection-type-label bg-success py-1 px-2 text-white">Текущее окружение: @dbMode.EnvironmentName</div>
    }

    @if (Context.Items.ContainsKey("sysHealthMessages"))
    {
        <div class="system-health-messages" style="padding:15px;">
            @foreach (var msg in (HealthDiagnosticMessage[])Context.Items["sysHealthMessages"])
            {
                <p class="system-health-message message-type-@msg.Type.ToString().ToLower()" style="font-size:18px; color:red">
                    @msg.Message
                </p>
            }
        </div>
    }

    <!-- Begin page -->
    <div class="wrapper">
        <!-- ========== Left Sidebar Start ========== -->
        <div class="left-side-menu">

            <!-- LOGO -->
            <a href="@(Url.YodaAction("CabinetStartPageModule", "CabinetStartPage"))" class="logo text-center logo-light">
                <span class="logo-lg">
                    <span class="menu-logo logo-light-full"></span>
                </span>
                <span class="logo-sm">
                    <span class="menu-logo-sm logo-light-small"></span>
                </span>
            </a>

            <!-- LOGO -->
            <a href="index.html" class="logo text-center logo-dark">
                <span class="logo-lg">
                    <span class="menu-logo logo-dark-full"></span>
                </span>
                <span class="logo-sm">
                    <span class="menu-logo-sm logo-dark-small"></span>
                </span>
            </a>

            <div class="h-100" id="left-side-menu-container" data-simplebar>
                <!--- Sidemenu -->
                @{
                    var menuBlockModel = new MenuInfo
                    {
                        Menu = Model.Menu,
                        CurrentModuleName = Model.Module,
                        CurrentMenuName = Model.Method,
                        RequestContext = Model.RequestContext,
                        CurMenuItem = Model.Breadcrumb.MenuItem
                    };
                    Html.RenderPartial("MenuSidebarBlock", menuBlockModel);
                }
                <div class="clearfix"></div>

            </div>
            <!-- Sidebar -left -->

        </div>
        <!-- Left Sidebar End -->
        <!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->

        <div class="content-page">
            <div class="content">
                <!-- Topbar Start -->
                <div class="navbar-custom">
                    <ul class="list-unstyled topbar-right-menu float-right mb-0">

                        <li class="langs dropdown notification-list topbar-dropdown">
                            <a class="nav-link dropdown-toggle arrow-none" data-toggle="dropdown" href="#" role="button" aria-haspopup="false" aria-expanded="false">
                                <span class="align-middle d-sm-inline-block">@Model.SupportedLanguages.FirstOrDefault(x => x.Lang == Model.CurrentLanguage)?.Text</span> <i class="mdi mdi-chevron-down  d-sm-inline-block align-middle"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-animated topbar-dropdown-menu">
                                @foreach (var language in Model.SupportedLanguages)
                                {
                                    if (language.Lang.EqualsIgnoreCase(Model.CurrentLanguage))
                                    {
                                        continue;
                                    }
                                    <a href="@LanguagesChangeHelpers.GetChangeLanguageUrl((HtmlHelper)Html, Model.Module, Model.Method, language.Lang)" class="dropdown-item notify-item">
                                        <span class="align-middle">@language.Text</span>
                                    </a>
                                }
                            </div>
                        </li>


                        @{
                            var user = Model.RequestContext.User;
                            if (user.IsAuthentificated)
                            {
                                var bin = user.GetUserBin(Model.RequestContext.QueryExecuter);
                                var fio = user.GetUserShortName(Model.RequestContext.QueryExecuter);
                                var iin = user.GetUserIin(Model.RequestContext.QueryExecuter);
                                var userProfileUrl = "#";
                                if (string.IsNullOrEmpty(Model.RequestContext.Configuration["AuthenticationEndpoint"]))
                                {
                                    if (user.IsExternalUser())
                                    {
                                        userProfileUrl = Url.YodaAction("ExternalRegistrationModule", "MnuUserProfileRedirect");
                                    }
                                    else
                                    {
                                        userProfileUrl = Url.YodaAction("InternalRegistrationModule", "EditUserInternalSelfData");
                                    }
                                }
                                var signOutUrl = Url.YodaAction("UsersCommonFuncModule", "LogOut");

                                <li class="notifys dropdown notification-list">
                                    <a class="nav-link dropdown-toggle arrow-none" data-toggle="dropdown" href="#" role="button" aria-haspopup="false" aria-expanded="false">
                                        <i class="dripicons-bell noti-icon"></i>
                                        @{
                                            var unreadNotificationsCount = notificationsApiClient.GetUnReadCountAsync(user.Name).Result;
                                            if (unreadNotificationsCount > 0)
                                            {
                                                <span id="notification-bell-badge" class="badge badge-danger-lighten">@unreadNotificationsCount</span>
                                            }
                                        }
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-animated dropdown-lg">

                                        <!-- item-->
                                        <div class="dropdown-item noti-title">
                                            <h5 class="m-0">
                                                <span class="float-right">
                                                    <a href="javascript: void(0);" class="text-dark">
                                                        <small>Clear All</small>
                                                    </a>
                                                </span>Сообщения
                                            </h5>
                                        </div>

                                        <div style="max-height: 230px;" data-simplebar>
                                            <!-- item-->
                                            @{
                                                var lastNotifications = notificationsApiClient.GetLastsAsync(user.Name).Result.ToArray();
                                                if (lastNotifications.Length > 0)
                                                {
                                                    var lastFourNotifications = lastNotifications.Take(4);
                                                    foreach (var notification in lastFourNotifications)
                                                    {
                                                        <a href="javascript:void(0);" class="dropdown-item notify-item">
                                                            <div class="notify-icon bg-primary">
                                                                <i class="mdi mdi-comment-account-outline"></i>
                                                            </div>
                                                            <h5 class="mt-0 mb-0 font-14"> @notification.Msg.Title</h5>
                                                            <p class="notify-details">
                                                                @notification.Msg.Body
                                                                <small class="text-muted">@notification.TimeStamp.Humanize(utcDate: notification.TimeStamp.Kind == DateTimeKind.Utc)</small>
                                                            </p>
                                                        </a>
                                                    }

                                                }
                                                else
                                                {
                                                    <a href="javascript:void(0);" class="dropdown-item notify-item">
                                                        <div class="notify-icon bg-primary">
                                                            <i class="mdi mdi-comment-account-outline"></i>
                                                        </div>
                                                        <p class="notify-details">
                                                            Пока нет никаких сообщений
                                                        </p>
                                                    </a>
                                                }
                                            }
                                        </div>

                                        <!-- All-->
                                        <a href="@Url.YodaAction("NotificationModule", "MnuUserNotifications", new UserNotificationsArgs() {MenuAction = MnuUserNotifications.UserNotificationsActions.ViewAll})" class="dropdown-item text-center text-primary notify-item notify-all">
                                            Все сообщения
                                        </a>

                                    </div>
                                </li>
                                <li class="account dropdown notification-list">
                                    <a class="nav-link dropdown-toggle nav-user arrow-none mr-0" data-toggle="dropdown" href="#" role="button" aria-haspopup="false"
                                       aria-expanded="false">
                                        <span class="account-user-avatar">
                                            <img src="@avatarClient.GetAvatarUrl(iin)" class="rounded-circle avatar-default"></img>
                                        </span>
                                        <span class="account-name">
                                            <span class="account-user-name">@fio</span>
                                            @{
                                                if (!string.IsNullOrEmpty(bin))
                                                {
                                                    <span class="account-position">@bin</span>
                                                }
                                            }
                                        </span>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-animated topbar-dropdown-menu profile-dropdown">
                                        <!-- item-->
                                        <div class=" dropdown-header noti-title">
                                            <h6 class="text-overflow m-0">Добро пожаловать !</h6>
                                        </div>
                                        @{
                                            var contextMenuItemsServices = Context.RequestServices.GetRequiredService<IEnumerable<Yoda.IUserContextMenuItems>>();
                                            var contextMenuItemList = contextMenuItemsServices
                                                .SelectMany(x => x.GetUserContextMenuItems(Model.RequestContext));

                                            foreach (var cm in contextMenuItemList)
                                            {
                                                <a href="@cm.Url" class="dropdown-item notify-item">
                                                    <i class="@cm.IconClassName"></i>
                                                    <span>@cm.Text</span>
                                                </a>
                                            }
                                        }
                                    </div>
                                </li>
                            }
                            else
                            {
                                <li class="account dropdown notification-list topbar-dropdown">
                                    <a class="nav-link " href="@Url.YodaAction("UsersCommonFuncModule", "Challenge")" aria-haspopup="false" aria-expanded="false">
                                        <span class="align-middled-sm-inline-block">Войти</span>
                                    </a>
                                </li>
                            }
                        }

                    </ul>
                    <button class="button-menu-mobile open-left disable-btn">
                        <i class="mdi mdi-menu"></i>
                    </button>
                </div>
                <!-- end Topbar -->
                <!-- Start Content-->
                <div class="container-fluid">

                    <!-- start page title -->
                    <div class="row">
                        <div class="col-12">
                            <div class="page-title-box">
                                <div class="page-title-right">
                                    @{Html.RenderPartial("Breadcrumb", Model.Breadcrumb);}
                                </div>
                                <h4 class="page-title">
                                    @ViewData.Model.Title
                                </h4>
                                @{Html.RenderPartial("LocalTasks", Model.LocalTasksArea);}
                            </div>
                        </div>
                    </div>
                    <!-- end page title -->
                    @if (Model.LocalTasksArea.MenuLocalTasks.Length > 0)
                    {
                        Html.RenderPartial("MenuLocalTasks", Model.LocalTasksArea);
                    }
                    <div class="row">
                        <div class="col-xl-12 col-lg-12">
                            @if (!string.IsNullOrEmpty(TempData["PostbackMessage"] + string.Empty))
                            {
                                <div class="alert alert-info bg-white text-info" role="alert" id="postback-message">@(TempData["PostbackMessage"] + string.Empty)</div>
                            }

                            @{ Html.RenderPartial("MainContent"); }
                        </div> <!-- end col -->
                    </div>
                </div>
                <!-- container -->

            </div>
            <!-- content -->
            <!-- Footer Start -->
            <footer class="footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-6">
                            1993 -
                            <script>document.write(new Date().getFullYear())</script> © Разработчик АО “Информационно-учетный центр”
                        </div>
                        <div class="col-md-6">
                            <div class="text-md-right footer-links d-none d-md-block">
                                <a target="_blank" href="https://www.gosreestr.kz/ru/PhoneList.aspx">Контакты</a>
                            </div>
                        </div>
                    </div>
                </div>
            </footer>
            <!-- end Footer -->

        </div>

        <!-- ============================================================== -->
        <!-- End Page content -->
        <!-- ============================================================== -->


    </div>
    <!-- END wrapper -->

    @foreach (var jsFile in Model.JsFiles)
    {
        using (new ConditionalCommentWrapper(Html, jsFile.ConditionalComment))
        {
            <script src="@jsFile.File?v=@jsFile.Hash" type="text/javascript"></script>
        }
    }
</body>
</html>
