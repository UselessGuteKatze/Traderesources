server {
        listen 443;
        server_name  default_server;
        ssl_certificate "{{ proxyPass.nginx.sslCertificatePubLocation }}";
        ssl_certificate_key "{{ proxyPass.nginx.sslCertificateKeyLocation }}";

        return      444;
}

server {
    listen       {{ worldPort }} {{ 'ssl' if sslCertificate is defined and sslCertificate is not none else '' }};
    server_name  {% for host in acceptingHost %} {{host}}  {% endfor %};
    large_client_header_buffers 4 64k;
    proxy_buffer_size   64k;
    proxy_buffers   4 64k;
    proxy_busy_buffers_size   64k;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    client_max_body_size 15m;

{% if sslCertificate is defined and sslCertificate is not none %}
    ssl_certificate "{{ proxyPass.nginx.sslCertificatePubLocation }}";
    ssl_certificate_key "{{ proxyPass.nginx.sslCertificateKeyLocation }}";
    ssl_session_cache shared:SSL:10m;
    ssl_protocols  TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_timeout  10m;
    add_header Strict-Transport-Security 'max-age=604800';
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    ssl_prefer_server_ciphers on;
{% endif %}

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;


    gzip on;
    gzip_types application/font-woff font/woff2 text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;
    gzip_min_length 1000;
    # Разрешить сжатие для всех проксированных запросов 
    gzip_proxied     any;
    
    location / {
            include {{ proxyPass.nginx.serverLocationConfFile }};

            # This is needed to Vshep Proxy
            {{ 'proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;            
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;' if enableHttpHeaders is defined and enableHttpHeaders == true else '' }}
            
    }

    error_page 444 403 404 400 /404.html;
        location = /40x.html {
        root {{appRootDir}}/nginx-default-pages/;
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        root {{appRootDir}}/nginx-default-pages/;
    }
        
}
